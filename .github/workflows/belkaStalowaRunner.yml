name: Build and Test

on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: self-hosted
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16

    - name: Install Angular dependencies
      run: npm ci

    - name: Build Angular app
      run: npm run build
    - name: List directory after build
      run: ls -lR dist/

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'  

    - name: Install Python dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r ./requirements.txt

    - name: Start Angular server
      run: npm start &
      env:
        CI: true
    - name: Start Python server
  
      run: |
         cd backend
         nohup python app.py > flask.log 2>&1 &
      env:
        CI: true
    
    - name: Run tests
      run: |
        # Add commands to run your tests here

    - name: Deploy to Server
      if: github.ref == 'refs/heads/master'
      env:
        SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_KEY }}
        DEPLOY_SERVER: vps-9f62e310.vps.ovh.net
        DEPLOY_USER: ubuntu
      run: |
        # Start the SSH agent
        eval "$(ssh-agent -s)"

        # Add the SSH key stored in GitHub secrets to the agent
        echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
      
        # Bypass host key checking
        ssh-keyscan -H ${{ env.DEPLOY_SERVER }} >> ~/.ssh/known_hosts

        # Copy files to the server
        scp -r dist/ ${{ env.DEPLOY_USER }}@${{ env.DEPLOY_SERVER }}:/home/ubuntu/belka-stalowa/
        scp -r ./backend ${{ env.DEPLOY_USER }}@${{ env.DEPLOY_SERVER }}:/home/ubuntu/belka-stalowa

    - name: Restart Applications with PM2
      run: |
       #ssh ${{ env.DEPLOY_USER }}@${{ env.DEPLOY_SERVER }} << 'EOF'
       # Restart the Angular app
       cd /home/ubuntu/belka-stalowa/
       #pm2 start "angular-app"
       pm2 start "http-server -p 4201" --name "angular-app"
       #pm2 save
       #If there's an existing PM2 process for the app, stop it
       pm2 stop angular-app || true
       pm2 stop http-server || true
       
       # Start the Angular app using PM2
       pm2 start http-server -- -p 4201 -d false --name "angular-app" --path ./dist/belka-stalowa

       # Restart the Flask app
       pm2 stop belka-stalowa-backend || true
       pm2 save
       chmod +x /home/ubuntu/belka-stalowa/backend/venv/bin/activate
       cd /home/ubuntu/belka-stalowa/backend
       source ./venv/bin/activate
       pm2 start python3 /home/ubuntu/belka-stalowa/backend/req.py --name belka-stalowa-backend
       pm2 save
       
      env:
       DEPLOY_SERVER: vps-9f62e310.vps.ovh.net
       DEPLOY_USER: ubuntu